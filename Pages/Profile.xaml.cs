using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using MVA_Poe.Classes;

namespace MVA_poe.Pages
{
    public partial class Profile : Page
    { // Declare a User object
        private User _user = new User();

        // Declare an integer for the user ID
        int userId;

        // Declare a string for the language preference
        private string lang;

        // Declare a boolean for edit mode
        private bool edits;

        // Constructor for the Profile class
        public Profile()
        {
            // Initialize the component (generated by XAML)
            InitializeComponent();

            // Set the user ID from DBHelper
            userId = DBHelper.userID;

            // Retrieve user data
            GetData();

            // Set the language based on the DBHelper.lang value
            SetLanguage(DBHelper.lang);
        }

        //----------------------------------------------------------------------------//

        // Method: SetLanguage
        // Sets the language for the application based on the culture code
        private void SetLanguage(string cultureCode)
        {
            // Set the current UI culture to the specified culture code
            CultureInfo.CurrentUICulture = new CultureInfo(cultureCode);

            // Create a new ResourceDictionary instance
            ResourceDictionary dict = new ResourceDictionary();

            // Switch based on the culture code
            switch (cultureCode)
            {
                case "af":
                    // Set the source to the Afrikaans resource file
                    dict.Source = new Uri("Resources/Strings.af.xaml", UriKind.Relative);
                    break;
                case "isx":
                    // Set the source to the Icelandic resource file
                    dict.Source = new Uri("Resources/Strings.isx.xaml", UriKind.Relative);
                    break;
                default:
                    // Set the source to the English resource file
                    dict.Source = new Uri("Resources/Strings.en.xaml", UriKind.Relative);
                    break;
            }

            // Add the resource dictionary to the merged dictionaries
            this.Resources.MergedDictionaries.Add(dict);
        }

        //----------------------------------------------------------------------------//

        // Method: GetData
        // Retrieves user data from the database
        private void GetData()
        {
            // Create a new instance of AppDbContext
            using (var context = new AppDbContext())
            {
                // Retrieve the user from the database based on the user ID
                _user = context.Users
                    .Where(u => u.UserId == userId)
                    .FirstOrDefault();
            }

            // If the user exists
            if (_user != null)
            {
                // Populate the UI fields with user data
                txtFName.Text = _user.fName;
                txtLName.Text = _user.lName;
                txtEmail.Text = _user.email;
                txtID.Text = _user.ID;
                txtAddress.Text = _user.address;
                lang = _user.langPref;

                // Set the language preference checkboxes
                GetCheckData();
            }
        }

        //----------------------------------------------------------------------------//

        // Method: GetCheckData
        // Sets the language preference checkboxes based on the user's language preference
        private void GetCheckData()
        {
            // Check the appropriate checkbox based on the language preference
            if (lang == "en")
            {
                chkEn.IsChecked = true;
            }
            else if (lang == "af")
            {
                chkAf.IsChecked = true;
            }
            else if (lang == "isx")
            {
                chkIsx.IsChecked = true;
            }
        }

        //----------------------------------------------------------------------------//

        // Event handler for the language preference checkbox checked event
        private void LangPref_Checked(object sender, RoutedEventArgs e)
        {
            // Uncheck the other checkboxes based on the selected checkbox
            if (sender == chkEn)
            {
                chkAf.IsChecked = false;
                chkIsx.IsChecked = false;
            }
            else if (sender == chkAf)
            {
                chkEn.IsChecked = false;
                chkIsx.IsChecked = false;
            }
            else if (sender == chkIsx)
            {
                chkEn.IsChecked = false;
                chkAf.IsChecked = false;
            }
        }

        //----------------------------------------------------------------------------//

        // Event handler for the Edit button click event
        private void EditButton_Click(object sender, RoutedEventArgs e)
        {
            // Enable the UI fields for editing
            txtAddress.IsEnabled = true;
            txtEmail.IsEnabled = true;
            txtFName.IsEnabled = true;
            txtLName.IsEnabled = true;
            txtID.IsEnabled = true;
            chkAf.IsEnabled = true;
            chkEn.IsEnabled = true;
            chkIsx.IsEnabled = true;
            SaveButton.IsEnabled = true;

            // Set the edits flag to true
            edits = true;
        }

        //----------------------------------------------------------------------------//

        // Method: Disabled
        // Disables the UI fields
        private void Disabled()
        {
            // Disable the UI fields
            txtAddress.IsEnabled = false;
            txtEmail.IsEnabled = false;
            txtFName.IsEnabled = false;
            txtLName.IsEnabled = false;
            txtID.IsEnabled = false;
            chkAf.IsEnabled = false;
            chkEn.IsEnabled = false;
            chkIsx.IsEnabled = false;
            SaveButton.IsEnabled = false;
        }

        //----------------------------------------------------------------------------//

        // Event handler for the Save button click event
        private void SaveButton_Click_1(object sender, RoutedEventArgs e)
        {
            // If edits are enabled
            if (edits)
            {
                // Update the user's language preference based on the selected checkbox
                if (chkAf.IsChecked == true)
                {
                    _user.langPref = "af";
                }
                else if (chkEn.IsChecked == true)
                {
                    _user.langPref = "en";
                }
                else if (chkIsx.IsChecked == true)
                {
                    _user.langPref = "isx";
                }

                // Create a new instance of AppDbContext
                using (var context = new AppDbContext())
                {
                    // Retrieve the user from the database based on the user ID
                    _user = context.Users
                        .Where(u => u.UserId == userId)
                        .FirstOrDefault();

                    // Update the user's language preference
                    _user.langPref = _user.langPref;

                    // Save the changes to the database
                    context.SaveChanges();
                }
            }

            // Show a message indicating the profile was updated
            MessageBox.Show("Profile Updated");

            // Disable the UI fields
            Disabled();
        }
    }
}

//__---____---____---____---____---____---____---__.ooo END OF FILE ooo.__---____---____---____---____---____---____---__\\